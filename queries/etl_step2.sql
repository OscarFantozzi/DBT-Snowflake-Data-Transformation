/* STEPS:

1 - Create Raw, Staging, and DW databases. Ok
2 - Extract data from the original source to the Raw database. Ok
3 - Load data into the Staging database and apply transformations.Ok
4 - Load data into the DW, build a star schema model, and create views to answer business questions.
5 - Monitor each step of the ETL to track query performance. This will serve as the baseline for improvements.
6 - Run the ETL using DBT, aiming to improve query performance by following best practices recommended by the DBT community.
*/
ALTER SESSION SET QUERY_TAG = 'ETL_STEP_2';
USE DATABASE SALES_STAGING;

CREATE TABLE IF NOT EXISTS PRODUCT_SALES_PERFORMANCE_STAGING
(
    SKU         VARCHAR(16777216),
    URL         VARCHAR(16777216),
    COUNTRY     VARCHAR(16777216),
    STOREID     VARCHAR(16777216),
    ZIP         VARCHAR(16777216),
    CITY        VARCHAR(16777216),
    STATE       VARCHAR(16777216),
    ADRESS      VARCHAR(16777216),
    TITLE       VARCHAR(16777216),
    BRAND       VARCHAR(16777216),
    SALES       NUMBER(38,0),
    REVENUEUSD  FLOAT,
    DATE        DATE   

);

TRUNCATE TABLE PRODUCT_SALES_PERFORMANCE_STAGING;

INSERT INTO PRODUCT_SALES_PERFORMANCE_STAGING(SKU,URL,COUNTRY,STOREID,ZIP,CITY,STATE,ADRESS,TITLE,BRAND,SALES,REVENUEUSD,DATE)
SELECT 
    SKU,
    URL,
    COUNTRY,
    STOREID,
    ZIP,
    CITY,
    STATE,
    ADRESS,
    TITLE,
    BRAND,
    SALES,
    REVENUEUSD,
    DATE
FROM 
    SALES_RAW.PUBLIC.PRODUCT_SALES_PERFORMANCE;


/*
-- check nulls values
SELECT
    SUM(CASE WHEN A.SKU IS NULL THEN 1 ELSE 0 END) AS SKU,
    SUM(CASE WHEN A.URL IS NULL THEN 1 ELSE 0 END) AS URL,
    SUM(CASE WHEN A.COUNTRY IS NULL THEN 1 ELSE 0 END) AS COUNTRY,
    SUM(CASE WHEN A.STOREID IS NULL THEN 1 ELSE 0 END) AS STOREID,
    SUM(CASE WHEN A.CITY IS NULL THEN 1 ELSE 0 END) AS CITY,
    SUM(CASE WHEN A.STATE IS NULL THEN 1 ELSE 0 END) AS STATE,
    SUM(CASE WHEN A.ADRESS IS NULL THEN 1 ELSE 0 END) AS ADRESS,
    SUM(CASE WHEN A.TITLE IS NULL THEN 1 ELSE 0 END) AS TITLE,
    SUM(CASE WHEN A.BRAND IS NULL THEN 1 ELSE 0 END) AS BRAND,
    SUM(CASE WHEN A.SALES IS NULL THEN 1 ELSE 0 END) AS SALES,
    SUM(CASE WHEN A.REVENUEUSD IS NULL THEN 1 ELSE 0 END) AS REVENUEUSD,
    SUM(CASE WHEN A.DATE IS NULL THEN 1 ELSE 0 END) AS DATE
    
FROM SALES_STAGING.PUBLIC.PRODUCT_SALES_PERFORMANCE_STAGING A;

-- check statistics to choose a value to replace nulls in REVENUEUSD column
SELECT 
    sum(A.sales)                     AS TOTAL_SALES,
    SUM(A.REVENUEUSD)                AS TOTAL_REVENUE,
    SUM(A.REVENUEUSD) / sum(a.sales) AS AVG,
    MEDIAN(A.REVENUEUSD) AS MEDIAN
FROM SALES_STAGING.PUBLIC.PRODUCT_SALES_PERFORMANCE_STAGING A;
*/

-- replacing nulls values
SET median_value = (SELECT 
                        MEDIAN(A.REVENUEUSD) 
                        FROM SALES_STAGING.PUBLIC.PRODUCT_SALES_PERFORMANCE_STAGING A);


UPDATE 
    SALES_STAGING.PUBLIC.PRODUCT_SALES_PERFORMANCE_STAGING A
SET 
    A.REVENUEUSD = $median_value
    WHERE
        A.REVENUEUSD IS NULL;


-- add store type column
ALTER TABLE
    SALES_STAGING.PUBLIC.PRODUCT_SALES_PERFORMANCE_STAGING
ADD COLUMN IF NOT EXISTS
    STORE_TYPE VARCHAR(150);

UPDATE
    SALES_STAGING.PUBLIC.PRODUCT_SALES_PERFORMANCE_STAGING 
SET 
    STORE_TYPE = CASE
                    WHEN 
                        SKU = URL THEN 'OFFLINE'

                    ELSE 
                        'ONLINE'
                    END;

                        


-- add YEAR column
ALTER TABLE
    SALES_STAGING.PUBLIC.PRODUCT_SALES_PERFORMANCE_STAGING
ADD COLUMN IF NOT EXISTS
    YEAR INT;

UPDATE
    SALES_STAGING.PUBLIC.PRODUCT_SALES_PERFORMANCE_STAGING A
SET 
    A.YEAR = YEAR(A.DATE);

-- add MONTH column
ALTER TABLE
    SALES_STAGING.PUBLIC.PRODUCT_SALES_PERFORMANCE_STAGING 
ADD COLUMN IF NOT EXISTS
    MONTH INT;

UPDATE
    SALES_STAGING.PUBLIC.PRODUCT_SALES_PERFORMANCE_STAGING A
SET 
    MONTH  = MONTH(A.DATE);

-- add day column
ALTER TABLE
    SALES_STAGING.PUBLIC.PRODUCT_SALES_PERFORMANCE_STAGING 
ADD COLUMN IF NOT EXISTS
    DAY INT;

UPDATE
    SALES_STAGING.PUBLIC.PRODUCT_SALES_PERFORMANCE_STAGING A
SET 
    DAY  = DAY(A.DATE);



SELECT * FROM SNOWFLAKE.ACCOUNT_USAGE.QUERY_HISTORY
WHERE QUERY_TAG = 'ETL_STEP_2';












